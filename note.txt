Bài 1: Học Git cơ bản
-Git là một distributed version control system(Hệ thống quản lý phiên bản phân tán)
-Giúp lưu trữ các phiên bản thay đổi của dự án, có thể sử dụng bởi nhiều người trong cùng một mã nguồn
-Các câu lệnh:
git config --global user.name '': cấu hình tên
git config --global user.email '': cấu hình email
git init: tạo ra một git repo dưới local 
git status: kiểm tra trạng thái các file trong folder(file nào đang làm việc và file nào đã được chuyển vào Staging Area)
git add: chuyển file từ folder đang làm việc vào Staging Area
git commit -m "commit message": chuyển file từ Staging Area vào Git repo với nội dung là những sự thay đổi trên những file đó
git log: kiểm tra những commit đã tạo
git commit -m "updated note txt file": ví dụ là cập nhật sự thay đổi của file note.txt vào git repo
git remote add origin (link repo): đưa vào git repo một local có sẵn
git branch -M main
git push -u origin main
git branch: show ra tất cả các branch có trong repo
-tạo ra một branch mới dựa trên branch main ban đầu: git checkout -b other
-chuyển file từ Staging Area về trạng thái đang làm việc ở folder: git restore --staged note.txt
git checkout <tên branch>: di chuyển giữa các branch
git merge other: ví dụ đưa những commit mới nhất từ branch other hợp nhất vào branch main
git checkout <hash>: chuyển về trạng thái với hash được gắn với commit nào đó
etc

*Thứ tự thực hiện khi có thay đổi trong file(commit change):
git status: kiểm tra xem có những thay đổi gì(có những file nào bị modified)
git add <tên file>.<tên loại file>: chuyển file từ trạng thái đang hoạt động ở folder sang Staging Area
git commit -m "updated note txt file new"
git push

*Khi mà có sự thay đổi trên file trên git repo mà sau đó cũng có một sự thay đổi ở file đó dưới local mà chúng không giống
nhau thì khi git push -> git pull sẽ báo lỗi về sự khác nhau đó và yêu cầu chúng ta lựa chọn sẽ sử dụng commit change nào
khi đó sẽ có các lựa chọn:
-accept current change: những thay đổi ở dưới local
-accept incoming change: những thay đổi trên repo

*Khi mà tạo một file mới dưới local(đã kiểm tra bằng git status) nhưng ko muốn up nó lên repo:
-tạo một file dạng .gitignore rồi thêm những file ko muốn up lên repo vào đó
-sau đó git add . và kiểm tra bằng git status thì sẽ thấy file .gitignore được đưa vào Staging Area còn file .env ko được
đưa vào đó
-tương tự với một ứng dụng phổ biến khác khi sau này có một file dạng node_modules chứa các packages(...) mà ko muốn
up lên repo